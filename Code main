StudentManagerApp.java

import java.util.ArrayList;
    import java.util.Collections;
    import java.util.Comparator;
    import java.util.Scanner;

    class Student {
        private int id;
        private String name;
        private double marks;
        private String rank;

        public Student(int id, String name, double marks) {
            this.id = id;
            this.name = name;
            this.marks = marks;
            this.rank = calculateRank();
        }

        private String calculateRank() {
            if (marks < 5.0) {
                return "Fail";
            } else if (marks < 6.5) {
                return "Medium";
            } else if (marks < 7.5) {
                return "Good";
            } else if (marks < 9.0) {
                return "Very Good";
            } else {
                return "Excellent";
            }
        }

        public int getId() {
            return id;
        }

        public String getName() {
            return name;
        }

        public double getMarks() {
            return marks;
        }

        public String getRank() {
            return rank;
        }

        public void setName(String name) {
            this.name = name;
        }

        public void setMarks(double marks) {
            this.marks = marks;
            this.rank = calculateRank();
        }

        @Override
        public String toString() {
            return "ID: " + id + ", Name: " + name + ", Marks: " + marks + ", Rank: " + rank;
        }
    }

    class StudentManager {
        private ArrayList<Student> students = new ArrayList<>();
        private Scanner scanner = new Scanner(System.in);

        public void addStudent() {
            System.out.print("Enter Student ID: ");
            int id = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            System.out.print("Enter Student Name: ");
            String name = scanner.nextLine();
            System.out.print("Enter Student Marks: ");
            double marks = scanner.nextDouble();
            Student student = new Student(id, name, marks);
            students.add(student);
            System.out.println("Student added successfully!");
        }

        public void editStudent() {
            System.out.print("Enter Student ID to edit: ");
            int id = scanner.nextInt();
            Student student = findStudentById(id);
            if (student != null) {
                System.out.print("Enter new name: ");
                scanner.nextLine(); // Consume newline
                String name = scanner.nextLine();
                System.out.print("Enter new marks: ");
                double marks = scanner.nextDouble();
                student.setName(name);
                student.setMarks(marks);
                System.out.println("Student updated successfully!");
            } else {
                System.out.println("Student not found.");
            }
        }

        public void deleteStudent() {
            System.out.print("Enter Student ID to delete: ");
            int id = scanner.nextInt();
            Student student = findStudentById(id);
            if (student != null) {
                students.remove(student);
                System.out.println("Student deleted successfully!");
            } else {
                System.out.println("Student not found.");
            }
        }

        public void displayAllStudents() {
            if (students.isEmpty()) {
                System.out.println("No students to display.");
            } else {
                for (Student student : students) {
                    System.out.println(student);
                }
            }
        }

        public void sortStudentsByMarks() {
            // Sorting using Bubble Sort (can be replaced with other sorting algorithms like Merge Sort)
            for (int i = 0; i < students.size() - 1; i++) {
                for (int j = 0; j < students.size() - i - 1; j++) {
                    if (students.get(j).getMarks() > students.get(j + 1).getMarks()) {
                        Collections.swap(students, j, j + 1);
                    }
                }
            }
            System.out.println("Students sorted by marks.");
        }

        public void searchStudentById() {
            System.out.print("Enter Student ID to search: ");
            int id = scanner.nextInt();
            Student student = findStudentById(id);
            if (student != null) {
                System.out.println(student);
            } else {
                System.out.println("Student not found.");
            }
        }

        private Student findStudentById(int id) {
            for (Student student : students) {
                if (student.getId() == id) {
                    return student;
                }
            }
            return null;
        }
    }


Main.java

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        StudentManager manager = new StudentManager();
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n--- Student Management System ---");
            System.out.println("1. Add Student");
            System.out.println("2. Edit Student");
            System.out.println("3. Delete Student");
            System.out.println("4. Display All Students");
            System.out.println("5. Sort Students by Marks");
            System.out.println("6. Search Student by ID");
            System.out.println("0. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    manager.addStudent();
                    break;
                case 2:
                    manager.editStudent();
                    break;
                case 3:
                    manager.deleteStudent();
                    break;
                case 4:
                    manager.displayAllStudents();
                    break;
                case 5:
                    manager.sortStudentsByMarks();
                    break;
                case 6:
                    manager.searchStudentById();
                    break;
                case 0:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        } while (choice != 0);

        scanner.close();
    }
}
